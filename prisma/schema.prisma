// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  name       String
  email      String       @unique
  password   String
  phone      String?      @unique
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  File       File[]
  Auth       Auth?
  active     Boolean      @default(true)
  UserApiKey UserApiKey[]
  Data       Data[]       @relation("UserToProfile")
  Orang      Data[]       @relation("OrangToProfile")
}

model Data {
  id      String  @id @default(uuid())
  User    User?   @relation("UserToProfile", fields: [userId], references: [id], map: "UserData")
  userId  String?
  Orang   User?   @relation("OrangToProfile", fields: [userId], references: [id], map: "OrangData")
  orangId String?
}

model File {
  id        String   @id @default(cuid())
  name      String
  ext       String
  path      String?
  isActive  Boolean  @default(true)
  User      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?
}

model Auth {
  User      User?    @relation(fields: [userId], references: [id])
  expired   Int?
  maxAge    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @id @default(cuid())
  isActive  Boolean  @default(true)
  token     String?  @db.Text
}

model UserApiKey {
  id        String   @id @default(cuid())
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  name      String?
  des       String?
  apikey    String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)
}
